class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m=matrix.length,n=matrix[0].length;
        ArrayList<Integer> ans=new ArrayList<>();
        int top=0,right=n-1,left=0,bottom=m-1;
        while(left<=right && top<=bottom)
        {
            ///Print the ist row
            for(int i=left;i<=right;i++)
              ans.add(matrix[top][i]);

            top++;
        ////Print the ast col
            for(int i=top;i<=bottom;i++)
             ans.add(matrix[i][right]);

            right--;
            if(top<=bottom)
            {
            ///Print bottom most row
                for(int i=right;i>=left;i--)
                  ans.add(matrix[bottom][i]);
            }
            

           bottom--;
           if(left<=right)
           {
            ////Print left most col
           for(int i=bottom;i>=top;i--)
           ans.add(matrix[i][left]);
           }
           left++;    

            
        }
        return ans;
        
    }
}
