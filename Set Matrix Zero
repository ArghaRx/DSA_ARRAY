*****BRUTE****

class Solution {
    public void markRow(int matrix[][],int m,int n,int i)
    {
        for(int j=0;j<n;j++)
        {
            if(matrix[i][j]!=0) matrix[i][j]=-999;
        }
    }
     public void markCol(int matrix[][],int m,int n,int j)
    {
        for(int i=0;i<m;i++)
        {
            if(matrix[i][j]!=0) matrix[i][j]=-999;
        }
    }
    public void setZeroes(int[][] matrix) {
        int m=matrix.length;
        int n=matrix[0].length;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]==0)
                {
                    markRow(matrix,m,n,i);
                    markCol(matrix,m,n,j);
                }
            }
        }

        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]==-999) matrix[i][j]=0;
            }
        }
    }
}



*****BETTER****

//By use a row array and a col array

class Solution {
    public void setZeroes(int[][] matrix) {
        int m=matrix.length;
        int n=matrix[0].length;
        int row[]=new int[m];
        int col[]=new int [n];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]==0)
                {
                    row[i]=1;
                    col[j]=1;
                }
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(row[i]==1 || col[j]==1)
                {
                    matrix[i][j]=0;
                }
            }
        }
        
    }
}



********OPTIMALL*****

class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        boolean firstRowHasZero = false;
        boolean firstColHasZero = false;

        // Check if the first row has zero
        for (int j = 0; j < n; j++) {
            if (matrix[0][j] == 0) {
                firstRowHasZero = true;
                break;
            }
        }

        // Check if the first column has zero
        for (int i = 0; i < m; i++) {
            if (matrix[i][0] == 0) {
                firstColHasZero = true;
                break;
            }
        }


------These two loops check whether the first row and the first column of the matrix contain
any zeros.If they do, firstRowHasZero and firstColHasZero are set to true, respectively.
These flags will be used later to decide whether to set the entire first row and first column to zero.----


        // Use the first row and first column as markers
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }

------This double loop scans the matrix starting from the second row and second column (i = 1, j = 1). 
If an element matrix[i][j] is zero, it sets the first element of the same row (matrix[i][0]) and the first 
element of the same column (matrix[0][j]) to zero. These first elements of rows and columns will act as 
markers to indicate if the corresponding row or column should be set to zero later.-------

       

// Set rows to zero based on markers in the first column
        for (int i = 1; i < m; i++) {
            if (matrix[i][0] == 0) {
                for (int j = 1; j < n; j++) {
                    matrix[i][j] = 0;
                }
            }
        }

-----This loop iterates through the matrix starting from the second row (i = 1). If the marker in the first
column (matrix[i][0]) is zero, it sets the entire row to zero.---------



        // Set columns to zero based on markers in the first row
        for (int j = 1; j < n; j++) {
            if (matrix[0][j] == 0) {
                for (int i = 1; i < m; i++) {
                    matrix[i][j] = 0;
                }
            }
        }

---------This loop iterates through the matrix starting from the second column (j = 1). 
If the marker in the first row (matrix[0][j]) is zero, it sets the entire column to zero.------


        // Set the first row and first column to zero if needed
        if (firstRowHasZero) {
            for (int j = 0; j < n; j++) {
                matrix[0][j] = 0;
            }
        }
        if (firstColHasZero) {
            for (int i = 0; i < m; i++) {
                matrix[i][0] = 0;
            }
        }
    }
}

------------These final two blocks of code set the entire first row and the entire first column to zero 
if their respective flags (firstRowHasZero and firstColHasZero) are set to true.

This approach efficiently sets the entire row and column to zero if any element in the matrix is zero, 
without using additional space.
